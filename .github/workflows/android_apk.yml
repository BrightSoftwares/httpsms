name: Build and deploy android apk

on: 
  push:
    #branches:
    #  - main
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_and_deploy:
    #needs: build-test
    name: Build and deploy
    runs-on: ubuntu-latest
    #runs-on: self-hosted

    #env:
    #  TARGET_HOSTS: docker_hosts_newgen

    steps:
      - name: "Checkout the code"
        uses: actions/checkout@v2

      - name: Decrypt the files
        run: |
          echo "Decrypting the inventory file"
          ls -lah android/app/
          gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.PGP_PASSPHRASE }} --output android/app/google-services.json android/app/google-services.json.gpg
          echo "Decrypted"
          ls -lah android/app/

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'

      - name: Build the app
        #if: ${{ false }} # A trick to skip this step and go tot he next one 
        run: |
          echo "Move into the android directory"
          cd android 
          echo "Building android application"
          ./gradlew assembleDebug
          echo "Building done"

      #- name: Create Release
      #  id: create_release
      #  uses: comnoco/create-release-action@v2
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: Release ${{ github.ref }}
      #    body: |
      #      Changes in this Release
      #      - First Change
      #      - Second Change
      #    draft: false
      #    prerelease: false

      - name: Check that the apk is there
        run: |
          echo "Checking the apk"
          ls -lR android/app/build/outputs/


      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag#v}" \
              --generate-notes \
              android/app/build/outputs/apk/


